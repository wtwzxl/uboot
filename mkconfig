#!/bin/sh -e

# Script to create header files and links to configure
# U-Boot for a specific board.
#
# Parameters:  Target  Architecture  CPU  Board [VENDOR] [SOC]
#
# (C) 2002-2006 DENX Software Engineering, Wolfgang Denk <wd@denx.de>
#

APPEND=no	# Default: Create new config file
BOARD_NAME=""	# Name to print in make output
TARGETS=""
#Parameters:                Target             Architecture      CPU            Board        [VENDOR]   [SOC]
# $#:        ./mkconfig    itop_4412_android 	 arm	         arm_cortexa9 	smdkc210 s     amsung   s5pc210命令行参数的个数 
#              $0           $1                   $2        $3         $4       $5        $6
# $符号总结: 
#$#: 代表后接的参数个数，这里为6 
# $@: 代表["$1" "$2" "$3" "$4"]之意，每个变量是独立的(用双引号括起来) 
# $*: 代表["$1c$2c$3c$4"]，其中c为分割字符，默认为空格键，所以本例中代表["$1 $2 $3 $4"] 
# -gt great than -lt less than 
while [ $# -gt 0 ] ; do
	case "$1" in
	--) shift ; break ;;
	-a) shift ; APPEND=yes ;;
	-n) shift ; BOARD_NAME="${1%%_config}" ; shift ;;
	-t) shift ; TARGETS="`echo $1 | sed 's:_: :g'` ${TARGETS}" ; shift ;;
	*)  break ;;
	esac
done

[ "${BOARD_NAME}" ] || BOARD_NAME="$1"  #BOARD_NAME = itop_4412_android

[ $# -lt 4 ] && exit 1
[ $# -gt 6 ] && exit 1

if [ "${ARCH}" -a "${ARCH}" != "$2" ]; then
	echo "Failed: \$ARCH=${ARCH}, should be '$2' for ${BOARD_NAME}" 1>&2
	exit 1
fi

echo "Configuring for ${BOARD_NAME} board..."

#
# Create link to architecture specific headers
#
if [ "$SRCTREE" != "$OBJTREE" ] ; then   #SRCTREE这里是当前目录	OBJTREE的值等于$(if $(BUILD_DIR),$(BUILD_DIR),$(CURDIR))   这句话的意思：若BUILD_DIR 变量不为空，OBJTREE = BUILD_DIR
										 #
	mkdir -p ${OBJTREE}/include  #  需要时创建上层目录，如目录早已存在则不当作错误
	mkdir -p ${OBJTREE}/include2
	cd ${OBJTREE}/include2
	rm -f asm
	ln -s ${SRCTREE}/include/asm-$2 asm   #等价于 ln -s ./include/asm-arm asm
	LNPREFIX="../../include2/asm/"
	cd ../include
	rm -rf asm-$2   # rm -rf asm-arm 
	rm -f asm
	mkdir asm-$2   # mkdir asm-arm
	ln -s asm-$2 asm  #ln -s asm-arm asm
else
	cd ./include
	rm -f asm
	ln -s asm-$2 asm
fi

rm -f asm-$2/arch   #rm -f asm-arm/arch

if [ -z "$6" -o "$6" = "NULL" ] ; then
	ln -s ${LNPREFIX}arch-$3 asm-$2/arch   
else
	ln -s ${LNPREFIX}arch-$6 asm-$2/arch  #执行这个语句 ln -s arch-s5pc210 asm-arm/arch
fi

if [ "$2" = "arm" ] ; then
	rm -f asm-$2/proc      #rm -f asm-arm/proc      
	ln -s ${LNPREFIX}proc-armv asm-$2/proc    # ln -s ../../include2/asm/proc-armv asm-arm
fi

#
# Create include file for Make
#
echo "ARCH   = $2" >  config.mk
echo "CPU    = $3" >> config.mk
echo "BOARD  = $4" >> config.mk

[ "$5" ] && [ "$5" != "NULL" ] && echo "VENDOR = $5" >> config.mk

[ "$6" ] && [ "$6" != "NULL" ] && echo "SOC    = $6" >> config.mk
#ARCH   = arm
#CPU    = arm_cortexa9
#BOARD  = smdkc210
#VENDOR = samsung
#SOC    = s5pc210
# Assign board directory to BOARDIR variable
if [ -z "$5" -o "$5" = "NULL" ] ; then
    BOARDDIR=$4
else
    BOARDDIR=$5/$4
fi

#
# Create board specific header file
#
if [ "$APPEND" = "yes" ]	# Append to existing config file    这里APPEND 为no 所以不执行
then
	echo >> config.h
else
	> config.h		# Create new config file
fi
echo "/* Automatically generated - do not edit */" >>config.h

for i in ${TARGETS} ; do
	echo "#define CONFIG_MK_${i} 1" >>config.h ;
done

cat << EOF >> config.h
#define CONFIG_BOARDDIR board/$BOARDDIR
#include <config_defaults.h>
#include <configs/$1.h>   
#include <asm/config.h>
EOF
# 在include目录下的config.h 文件下创建

# /* Automatically generated - do not edit */
# #define CONFIG_BOARDDIR board/samsung/smdkc210
# #include <config_defaults.h>
# #include <configs/itop_4412_android.h>
# #include <asm/config.h>

exit 0
